
#include <utils.mlp>
#include <Pair.mlp>
#include <Optional.mlp>

package global

var Pair? (left, right):{
    Optional($true, Pair(left, right))
}
var END {
    Optional($false, _)
}

var Stream Pair?

var stream-filter {
    var stream-filter _

    stream-filter := (pred, stream):{
        tern(none?(stream), END, {
            var stream some(stream)
            !tern(pred(left(stream)), stream-filter(pred, right(stream)), {
                Stream(left(stream), stream-filter(pred, right(stream)))
            })
        })
    }

    stream-filter
}

var subscript {
    var err ():{
        print("ERR not enough elements")
        exit(1)
    }

    var subscript _
    subscript := (stream, nth):{
        tern(none?(stream), err(), {
            var stream some(stream)
            !tern(nth + -1, left(stream), {
                subscript(right(stream), nth + -1)
            })
        })
    }

    subscript
}

package main

print("Stream.mlp")


