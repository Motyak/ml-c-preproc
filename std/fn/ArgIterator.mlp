#pragma once

#include <std/fn/LazyList.mlp>
#include <std/fn/Pair.mlp>
#include <std/fn/Optional.mlp>
#include <std/fn/tern.mlp>

var ArgIterator (args...):{
    var args LazyList(args...)

    var Arg? (arg):{
        Optional($true, arg)
    }
    var END {
        Optional($false, _)
    }

    var next (peek?):{
        tern(none?(args), END, {
            var res left(some(args))
            peek? || {
                args := right(some(args))
            }
            Arg?(res)
        })
    }

    next
}

var next (iterator):{
    iterator(0)
}
var peek (iterator):{
    iterator(1)
}
